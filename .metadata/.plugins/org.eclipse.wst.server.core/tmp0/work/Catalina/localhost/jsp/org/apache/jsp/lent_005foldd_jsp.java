/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.55
 * Generated at: 2020-08-31 08:02:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class lent_005foldd_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<style>\r\n");
      out.write(".accordion {\r\n");
      out.write("  background-color: #eee;\r\n");
      out.write("  color: #444;\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  padding: 18px;\r\n");
      out.write("  width: 100%;\r\n");
      out.write("  border: none;\r\n");
      out.write("  text-align: left;\r\n");
      out.write("  outline: none;\r\n");
      out.write("  font-size: 15px;\r\n");
      out.write("  transition: 0.4s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".active, .accordion:hover {\r\n");
      out.write("  background-color: #ccc;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".accordion:after {\r\n");
      out.write("  content: '\\002B';\r\n");
      out.write("  color: #777;\r\n");
      out.write("  font-weight: bold;\r\n");
      out.write("  float: right;\r\n");
      out.write("  margin-left: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".active:after {\r\n");
      out.write("  content: \"\\2212\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".panel {\r\n");
      out.write("  padding: 0 18px;\r\n");
      out.write("  background-color: white;\r\n");
      out.write("  max-height: 0;\r\n");
      out.write("  overflow: hidden;\r\n");
      out.write("  transition: max-height 0.2s ease-out;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div.f{\r\n");
      out.write("border: 1px solid red;}\r\n");
      out.write("</style>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"./resources/css/bootstrap.min.css\" />\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<title>장기 중고</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t\tfunction checkTest1() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet testValue = document.getElementById(\"cntrTermMm1\").value;\r\n");
      out.write("\r\n");
      out.write("\t\t\tdocument.getElementById(\"result1\").innerHTML = testValue;\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t\tfunction checkTest2() {\r\n");
      out.write("\r\n");
      out.write("\t\t\tlet testValue = document.getElementById(\"cntrTermMm2\").value;\r\n");
      out.write("\r\n");
      out.write("\t\t\tdocument.getElementById(\"result2\").innerHTML = testValue;\r\n");
      out.write("\r\n");
      out.write("\t\t}\r\n");
      out.write("</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"jumbotron\">\r\n");
      out.write("\t\t<div class=\"container\">\r\n");
      out.write("\t\t\t<h1 class=\"display-3\">장기 중고 렌트</h1>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<button class=\"accordion\">계약 기간: &nbsp&nbsp&nbsp <span id=\"result1\"></span></button>\r\n");
      out.write("<div class=\"panel\"><span>차량 운행할수 있는 총 대여기간: &nbsp &nbsp &nbsp &nbsp</span>\r\n");
      out.write("<select name=\"cntrTermMm\" id=\"cntrTermMm1\" class=\"option01\" onchange=\"checkTest1()\" >\r\n");
      out.write("<option value=\"1개월\">1개월</option>\t\r\n");
      out.write("<option value=\"2개월\">2개월</option>\t\r\n");
      out.write("<option value=\"3개월\">3개월</option>\r\n");
      out.write("<option value=\"4개월\">4개월</option>\r\n");
      out.write("<option value=\"5개월\">5개월</option></select>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<button class=\"accordion\">약정 주행거리  <span id=\"result2\"></span></button> \r\n");
      out.write("<div class=\"panel\"><span>계약기간 총 주행거리 초과 시 위약금 발생   </span>\r\n");
      out.write("<select  name=\"cntrTermMm\" id=\"cntrTermMm2\" class=\"option01\" onchange=\"checkTest2()\" >\r\n");
      out.write("<option value=\"월 2천 Km이하\">월 2천 Km이하</option>\t\r\n");
      out.write("<option value=\"월 3천 Km이하\">월 3천 Km이하</option>\t\r\n");
      out.write("<option value=\"월 4천 Km이하\">월 4천 Km이하</option>\r\n");
      out.write("</select>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<table class=\"table talbe-hover\">\r\n");
      out.write("<tr><td>보험 조건</td><td>연령: 만 21세 이상, 대물:2천, 자손:1.5천 무보험: 2억</td></tr>\r\n");
      out.write("<tr><td>운전자 범위</td><td>연령: 만 21세 이상, 대물:2천, 자손:1.5천 무보험: 2억</td></tr>\r\n");
      out.write("<tr><td>사고 시 차량 대여</td><td>연령: 만 21세 이상, 대물:2천, 자손:1.5천 무보험: 2억</td></tr>\r\n");
      out.write("<tr><td>정비 서비스</td><td>연령: 만 21세 이상, 대물:2천, 자손:1.5천 무보험: 2억</td></tr>\r\n");
      out.write("<tr><td>초기 납부 조건</td><td>연령: 만 21세 이상, 대물:2천, 자손:1.5천 무보험: 2억</td></tr>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div class=\"f\">\r\n");
      out.write("<ul>\r\n");
      out.write("<li>차량 이미지는 고객님의 이해를 돕기 위한 이미지로 실제 차량과 다를 수 있습니다.</li>\r\n");
      out.write("<li>현재 재고 기준의 견적으로 바로 구매하시지 않는 경우 재고 소진으로 구매가 불가할 수 있습니다.</li>\r\n");
      out.write("<li>상담신청 및 다이렉트 계약을 클릭하시면 <span class=\"cl-point2\">MY렌터카 &gt; 장기CAR &gt; 견적정보</span>에서 견적비교를 하실 수 있습니다.</li>\r\n");
      out.write("<li>지역 이동이 필요할 경우 탁송료가 발생할 수 있습니다.</li>\r\n");
      out.write("<li>약정 주행거리 초과 위약금: 1600CC미만(60원/km) , 2000CC미만(80원/km) , 2000CC이상(100원/km) , 수입차(200원/km)</li>\r\n");
      out.write("</ul>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<nav class=\"bg-danger container col-sm-4\" style=\"position: sticky; bottom: 0; margin: 0 auto; left: 0; right: 0;\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<dl class=\"row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<dt class=\"col-sm-5\">월 렌탈료</dt>\r\n");
      out.write("\t\t\t\t\t\t\t\t<dd class=\"col-sm-3\"><br></dd>\r\n");
      out.write("\t\t\t\t\t\t\t\t<dd><strong class=\"col-sm-5\"></strong>505055원</dd>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<dt class=\"col-sm-5\">(총 차량 소비자 가)</dt>\r\n");
      out.write("\t\t\t\t\t\t\t\t<dd class=\"col-sm-3\"><br></dd>\r\n");
      out.write("\t\t\t\t\t\t\t\t<dd><strong class=\"col-sm-5\"></strong>(101000원)</dd>\r\n");
      out.write("\t\t\t\t\t\t\t\t</dl>\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("var acc = document.getElementsByClassName(\"accordion\");\r\n");
      out.write("var i;\r\n");
      out.write("\r\n");
      out.write("for (i = 0; i < acc.length; i++) {\r\n");
      out.write("  acc[i].addEventListener(\"click\", function() {\r\n");
      out.write("    this.classList.toggle(\"active\");\r\n");
      out.write("    var panel = this.nextElementSibling;\r\n");
      out.write("    if (panel.style.maxHeight) {\r\n");
      out.write("      panel.style.maxHeight = null;\r\n");
      out.write("    } else {\r\n");
      out.write("      panel.style.maxHeight = panel.scrollHeight + \"px\";\r\n");
      out.write("    } \r\n");
      out.write("  });\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
